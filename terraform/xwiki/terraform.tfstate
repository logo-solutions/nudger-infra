{
  "version": 4,
  "terraform_version": "1.13.3",
  "serial": 57,
  "lineage": "98951014-1659-2529-1d1a-70dc07098921",
  "outputs": {
    "ingress_class": {
      "value": "nginx",
      "type": "string"
    },
    "xwiki_namespace": {
      "value": "xwiki",
      "type": "string"
    },
    "xwiki_service": {
      "value": "kubectl get svc -n xwiki -o wide",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "cert_manager",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "cert-manager",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "cert-manager",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v1.14.5",
                "chart": "cert-manager",
                "name": "cert-manager",
                "namespace": "cert-manager",
                "revision": 1,
                "values": "{\"installCRDs\":true}",
                "version": "v1.14.5"
              }
            ],
            "name": "cert-manager",
            "namespace": "cert-manager",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.jetstack.io",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "installCRDs",
                "type": "",
                "value": "true"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "v1.14.5",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.cert_manager"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "ingress_nginx",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "ingress-nginx",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "ingress-nginx",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.13.3",
                "chart": "ingress-nginx",
                "name": "ingress-nginx",
                "namespace": "ingress-nginx",
                "revision": 1,
                "values": "{\"controller\":{\"admissionWebhooks\":{\"enabled\":true,\"patch\":{\"enabled\":true}},\"hostPort\":{\"enabled\":true,\"ports\":{\"http\":80,\"https\":443}},\"ingressClassByName\":true,\"ingressClassResource\":{\"default\":false,\"enabled\":true,\"name\":\"nginx\"},\"podAntiAffinity\":\"soft\",\"service\":{\"type\":\"ClusterIP\"}}}",
                "version": "4.13.3"
              }
            ],
            "name": "ingress-nginx",
            "namespace": "ingress-nginx",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://kubernetes.github.io/ingress-nginx",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "\"controller\":\n  \"admissionWebhooks\":\n    \"enabled\": true\n    \"patch\":\n      \"enabled\": true\n  \"hostPort\":\n    \"enabled\": true\n    \"ports\":\n      \"http\": 80\n      \"https\": 443\n  \"ingressClassByName\": true\n  \"ingressClassResource\":\n    \"default\": false\n    \"enabled\": true\n    \"name\": \"nginx\"\n  \"podAntiAffinity\": \"soft\"\n  \"service\":\n    \"type\": \"ClusterIP\"\n"
            ],
            "verify": false,
            "version": "4.13.3",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.ingress_nginx"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "xwiki",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "./xwiki-helm/xwiki",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "xwiki",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "",
                "chart": "xwiki",
                "name": "xwiki",
                "namespace": "xwiki",
                "revision": 1,
                "values": "{\"affinity\":{},\"autoscaling\":{\"enabled\":false,\"maxReplicas\":3,\"metrics\":{},\"minReplicas\":1,\"status\":{}},\"cluster\":{\"enabled\":false,\"jgroups\":{\"kube_ping\":{\"url\":\"https://nexus.xwiki.org/nexus/service/local/repositories/central/content/org/jgroups/kubernetes/jgroups-kubernetes/${KUBEPING_VERSION}/jgroups-kubernetes-${KUBEPING_VERSION}.jar\",\"version\":\"2.0.1.Final\"},\"port\":7800},\"replicas\":1},\"commonAnnotations\":{},\"containerSecurityContext\":{\"enabled\":false,\"runAsNonRoot\":true,\"runAsUser\":100,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"customConfigs\":null,\"customConfigsSecrets\":null,\"customJdbc\":{\"enabled\":false},\"externalDB\":{\"customKeyRef\":{},\"enabled\":false},\"extraEnvVars\":[],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"global\":{\"security\":{\"allowInsecureImages\":true}},\"glowroot\":{\"enabled\":false,\"properties\":{\"data.dir\":\"/usr/local/xwiki/data/glowroot/data\",\"log.dir\":\"/usr/local/xwiki/data/glowroot/log\",\"tmp.dir\":\"/usr/local/xwiki/data/glowroot/tmp\"},\"url\":\"https://github.com/glowroot/glowroot/releases/download/v${GLOWROOT_VERSION}/glowroot-${GLOWROOT_VERSION}-dist.zip\",\"version\":\"0.14.0\"},\"hostAliases\":[],\"image\":{\"name\":\"xwiki\",\"pullPolicy\":\"IfNotPresent\",\"tag\":\"lts-mysql-tomcat\"},\"imagePullSecrets\":[],\"infinispan\":{\"customConfig\":\"\",\"defaultMemoryMaxCount\":10000,\"enabled\":false},\"ingress\":{\"className\":\"nginx\",\"enabled\":false,\"hosts\":[{\"host\":\"wiki.devops.nudger.fr\",\"paths\":[{\"path\":\"/\",\"pathType\":\"Prefix\"}]}],\"tls\":[{\"hosts\":[\"wiki.devops.nudger.fr\"],\"secretName\":\"xwiki-tls\"}]},\"initContainers\":{\"database\":{\"containerSecurityContext\":{\"enabled\":false,\"runAsUser\":0,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"enabled\":false},\"solr\":{\"containerSecurityContext\":{\"enabled\":false,\"runAsUser\":0,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"enabled\":false,\"image\":\"\"}},\"istio\":{\"enabled\":false,\"gateway\":{\"enabled\":false},\"tls\":{\"certificate\":{\"enabled\":false}}},\"javaOpts\":[],\"javaOptsSecrets\":null,\"logback\":{\"enabled\":false},\"mariadb\":{\"enabled\":false},\"mysql\":{\"auth\":{\"database\":\"xwiki\",\"password\":\"xwiki\",\"rootPassword\":\"xwiki\",\"username\":\"xwiki\"},\"enabled\":true,\"image\":{\"pullPolicy\":\"IfNotPresent\",\"registry\":\"public.ecr.aws\",\"repository\":\"bitnami/mysql\",\"tag\":\"8.4.5-debian-12-r0\"},\"initdbScripts\":{\"00-init.sql\":\"grant all privileges on *.* to xwiki@'%'\\n\"},\"primary\":{\"configuration\":\"[mysqld]\\nauthentication_policy='{{- .Values.auth.authenticationPolicy | default \\\"* ,,\\\" }}'\\nskip-name-resolve\\nexplicit_defaults_for_timestamp\\nbasedir=/opt/bitnami/mysql\\nplugin_dir=/opt/bitnami/mysql/lib/plugin\\nport={{ .Values.primary.containerPorts.mysql }}\\nmysqlx={{ ternary 1 0 .Values.primary.enableMySQLX }}\\nmysqlx_port={{ .Values.primary.containerPorts.mysqlx }}\\nsocket=/opt/bitnami/mysql/tmp/mysql.sock\\ndatadir=/bitnami/mysql/data\\ntmpdir=/opt/bitnami/mysql/tmp\\nmax_allowed_packet=16M\\nbind-address=*\\npid-file=/opt/bitnami/mysql/tmp/mysqld.pid\\nlog-error=/opt/bitnami/mysql/logs/mysqld.log\\ncharacter-set-server=utf8mb4\\ncollation-server=utf8mb4_bin\\nmysql_native_password=ON\\nslow_query_log=0\\nlong_query_time=10.0\\n{{- if .Values.tls.enabled }}\\nssl_cert=/opt/bitnami/mysql/certs/{{ .Values.tls.certFilename }}\\nssl_key=/opt/bitnami/mysql/certs/{{ .Values.tls.certKeyFilename }}\\n{{- if (include \\\"mysql.tlsCACert\\\" .) }}\\nssl_ca={{ include \\\"mysql.tlsCACert\\\" . }}\\n{{- end }}\\n{{- end }}\\n\\n[client]\\nport={{ .Values.primary.containerPorts.mysql }}\\nsocket=/opt/bitnami/mysql/tmp/mysql.sock\\ndefault-character-set=utf8mb4\\nplugin_dir=/opt/bitnami/mysql/lib/plugin\\n\\n[manager]\\nport={{ .Values.primary.containerPorts.mysql }}\\nsocket=/opt/bitnami/mysql/tmp/mysql.sock\\npid-file=/opt/bitnami/mysql/tmp/mysqld.pid\"}},\"nodeSelector\":{},\"persistence\":{\"accessModes\":[\"ReadWriteOnce\"],\"annotations\":{},\"customVolume\":{},\"dataSource\":{},\"enabled\":false,\"existingClaim\":\"\",\"labels\":{},\"selector\":{},\"size\":\"2Gi\",\"storageClass\":\"longhorn\"},\"podDisruptionBudget\":{\"enabled\":false,\"minAvailable\":1},\"postgresql\":{\"enabled\":false},\"probes\":{\"liveness\":{\"enabled\":true,\"failureThreshold\":10,\"httpGet\":{\"enabled\":true,\"path\":\"/rest\"},\"initialDelaySeconds\":30,\"periodSeconds\":30,\"successThreshold\":1,\"timeoutSeconds\":3},\"readiness\":{\"enabled\":true,\"failureThreshold\":10,\"httpGet\":{\"enabled\":true,\"path\":\"/rest/wikis/xwiki/spaces\"},\"initialDelaySeconds\":30,\"periodSeconds\":30,\"successThreshold\":1,\"timeoutSeconds\":3},\"startup\":{\"enabled\":true,\"failureThreshold\":5,\"httpGet\":{\"enabled\":false,\"path\":\"/\"},\"initialDelaySeconds\":120,\"periodSeconds\":30,\"successThreshold\":1,\"timeoutSeconds\":60}},\"prometheus\":{\"javaagent\":{\"config\":\"rules:\\n- pattern: \\\".*\\\"\\n\",\"enabled\":false,\"port\":12345,\"url\":\"https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/${PROMETHEUS_JAVAAGENT_VERSION}/jmx_prometheus_javaagent-${PROMETHEUS_JAVAAGENT_VERSION}.jar\",\"version\":\"0.20.0\"},\"podmonitor\":{\"enabled\":true,\"labels\":{}}},\"properties\":null,\"propertiesSecret\":{\"key\":\"\",\"name\":\"\"},\"resources\":{},\"securityContext\":{\"enabled\":false,\"fsGroup\":101},\"service\":{\"annotations\":{},\"externalIPs\":[],\"externalPort\":80,\"internalPort\":8080,\"name\":\"http\",\"portName\":\"node\",\"sessionAffinity\":\"ClientIP\",\"type\":\"ClusterIP\"},\"serviceAccount\":{\"annotations\":{}},\"solr\":{\"affinity\":{},\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"enabled\":true,\"privileged\":false,\"readOnlyRootFilesystem\":false,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"downloadCores\":{\"enabled\":true},\"enabled\":false,\"extraEnvVars\":[],\"image\":{\"digest\":\"\",\"pullPolicy\":\"IfNotPresent\",\"registry\":\"\",\"repository\":\"solr\",\"tag\":\"8.11.4-slim\"},\"imagePullSecrets\":[],\"nodeSelector\":{},\"persistence\":{\"accessModes\":[\"ReadWriteOnce\"],\"annotations\":{},\"dataSource\":{},\"enabled\":false,\"existingClaim\":\"\",\"labels\":{},\"selector\":{},\"size\":\"500Mi\",\"storageClass\":\"\"},\"podAnnotations\":{},\"probes\":{\"customLiveness\":{},\"customReadiness\":{},\"customStartup\":{},\"liveness\":{\"enabled\":true,\"failureThreshold\":6,\"initialDelaySeconds\":40,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":15},\"readiness\":{\"enabled\":true,\"failureThreshold\":6,\"initialDelaySeconds\":60,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":15},\"startup\":{\"enabled\":true,\"failureThreshold\":15,\"initialDelaySeconds\":40,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":15}},\"replicaCount\":1,\"resources\":{},\"service\":{\"annotations\":{},\"externalPort\":8983,\"internalPort\":8983,\"name\":\"http\",\"portName\":\"solr-node\",\"sessionAffinity\":\"ClientIP\",\"type\":\"ClusterIP\"},\"tolerations\":{}},\"tolerations\":[],\"volumePermissions\":{\"containerSecurityContext\":{\"enabled\":true,\"runAsUser\":0,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"enabled\":false},\"workloadStateful\":true}",
                "version": "1.6.3"
              }
            ],
            "name": "xwiki",
            "namespace": "xwiki",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": null,
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "image.tag",
                "type": "",
                "value": "lts-mysql-tomcat"
              },
              {
                "name": "ingress.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "persistence.storageClass",
                "type": "",
                "value": "longhorn"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "cluster:\n  enabled: false\n  replicas: 1\n  jgroups:\n    port: 7800\n    kube_ping:\n      version: \"2.0.1.Final\"\n      url: \"https://nexus.xwiki.org/nexus/service/local/repositories/central/content/org/jgroups/kubernetes/jgroups-kubernetes/${KUBEPING_VERSION}/jgroups-kubernetes-${KUBEPING_VERSION}.jar\"\n\ncommonAnnotations: {}\n\nimage:\n  name: xwiki\n  pullPolicy: IfNotPresent\n  tag: lts-mysql-tomcat\nservice:\n  annotations: {}\n  portName: node\n  name: http\n  type: ClusterIP\n  externalPort: 80\n  internalPort: 8080\n  externalIPs: []\n  sessionAffinity: ClientIP\nserviceAccount:\n  annotations: {}\nresources: {}\n\njavaOpts: []\n\njavaOptsSecrets:\n\nextraEnvVars: []\n\nextraVolumes: []\n\nextraVolumeMounts: []\n\nworkloadStateful: true\n\nsecurityContext:\n  enabled: false\n  fsGroup: 101\n\ncontainerSecurityContext:\n  enabled: false\n  runAsUser: 100\n  runAsNonRoot: true\n  seccompProfile:\n    type: \"RuntimeDefault\"\n\nvolumePermissions:\n  containerSecurityContext:\n    enabled: true\n    runAsUser: 0\n    seccompProfile:\n      type: \"RuntimeDefault\"\n  enabled: false\nglobal:\n  security:\n    allowInsecureImages: true\nmysql:\n  \n  image:\n    registry: public.ecr.aws\n    repository: bitnami/mysql\n    tag: 8.4.5-debian-12-r0\n    pullPolicy: IfNotPresent\n\n  enabled: true\n  auth:\n    rootPassword: \"xwiki\"\n    username: \"xwiki\"\n    password: \"xwiki\"\n    database: \"xwiki\"\n  initdbScripts:\n    00-init.sql: |\n      grant all privileges on *.* to xwiki@'%'\n  primary:\n    configuration: |-\n      [mysqld]\n      authentication_policy='{{- .Values.auth.authenticationPolicy | default \"* ,,\" }}'\n      skip-name-resolve\n      explicit_defaults_for_timestamp\n      basedir=/opt/bitnami/mysql\n      plugin_dir=/opt/bitnami/mysql/lib/plugin\n      port={{ .Values.primary.containerPorts.mysql }}\n      mysqlx={{ ternary 1 0 .Values.primary.enableMySQLX }}\n      mysqlx_port={{ .Values.primary.containerPorts.mysqlx }}\n      socket=/opt/bitnami/mysql/tmp/mysql.sock\n      datadir=/bitnami/mysql/data\n      tmpdir=/opt/bitnami/mysql/tmp\n      max_allowed_packet=16M\n      bind-address=*\n      pid-file=/opt/bitnami/mysql/tmp/mysqld.pid\n      log-error=/opt/bitnami/mysql/logs/mysqld.log\n      character-set-server=utf8mb4\n      collation-server=utf8mb4_bin\n      mysql_native_password=ON\n      slow_query_log=0\n      long_query_time=10.0\n      {{- if .Values.tls.enabled }}\n      ssl_cert=/opt/bitnami/mysql/certs/{{ .Values.tls.certFilename }}\n      ssl_key=/opt/bitnami/mysql/certs/{{ .Values.tls.certKeyFilename }}\n      {{- if (include \"mysql.tlsCACert\" .) }}\n      ssl_ca={{ include \"mysql.tlsCACert\" . }}\n      {{- end }}\n      {{- end }}\n\n      [client]\n      port={{ .Values.primary.containerPorts.mysql }}\n      socket=/opt/bitnami/mysql/tmp/mysql.sock\n      default-character-set=utf8mb4\n      plugin_dir=/opt/bitnami/mysql/lib/plugin\n\n      [manager]\n      port={{ .Values.primary.containerPorts.mysql }}\n      socket=/opt/bitnami/mysql/tmp/mysql.sock\n      pid-file=/opt/bitnami/mysql/tmp/mysqld.pid\nexternalDB:\n  enabled: false\n  customKeyRef: {}\n\nmariadb:\n  enabled: false\npostgresql:\n  enabled: false\nsolr:\n  enabled: false\n  replicaCount: 1\n  image: \n    registry: \"\"\n    repository: solr\n    tag: 8.11.4-slim\n    digest: \"\"\n    pullPolicy: IfNotPresent\n  imagePullSecrets: []\n  extraEnvVars: []\n  resources: {}\n  downloadCores:\n    enabled: true\n  containerSecurityContext:\n    enabled: true\n    allowPrivilegeEscalation: false\n    capabilities:\n      drop:\n      - ALL\n    privileged: false\n    readOnlyRootFilesystem: false\n    runAsNonRoot: true\n    seccompProfile:\n      type: RuntimeDefault\n  service:\n    annotations: {}\n    portName: solr-node\n    name: http\n    type: ClusterIP\n    externalPort: 8983\n    internalPort: 8983\n    sessionAffinity: ClientIP\n  persistence:\n    enabled: false\n    existingClaim: \"\"\n    storageClass: \"\"\n    accessModes:\n      - ReadWriteOnce\n    size: \"500Mi\"\n    annotations: {}\n    labels: {}\n    selector: {}\n    dataSource: {}\n  podAnnotations: {}\n  nodeSelector: {}\n  affinity: {}\n  tolerations: {}\n  probes:\n    customLiveness: {}\n    customReadiness: {}\n    customStartup: {}\n    liveness:\n      enabled: true\n      initialDelaySeconds: 40\n      periodSeconds: 10\n      timeoutSeconds: 15\n      failureThreshold: 6\n      successThreshold: 1\n    readiness:\n      enabled: true\n      initialDelaySeconds: 60\n      periodSeconds: 10\n      timeoutSeconds: 15\n      failureThreshold: 6\n      successThreshold: 1\n    startup:\n      enabled: true\n      initialDelaySeconds: 40\n      periodSeconds: 10\n      timeoutSeconds: 15\n      failureThreshold: 15\n      successThreshold: 1\n\ningress:\n  enabled: false\n  className: nginx\n  hosts:\n    - host: wiki.devops.nudger.fr\n      paths:\n        - path: /\n          pathType: Prefix\n  tls:\n    - hosts:\n        - wiki.devops.nudger.fr\n      secretName: xwiki-tls\nistio:\n  enabled: false\n  gateway:\n    enabled: false\n  tls:\n    certificate:\n      enabled: false\n\npersistence:\n  enabled: false\n  existingClaim: \"\"\n  storageClass: \"\"\n  accessModes:\n    - ReadWriteOnce\n  size: \"2Gi\"\n  annotations: {}\n  labels: {}\n  selector: {}\n  dataSource: {}\n  customVolume: {}\n\npodDisruptionBudget:\n  enabled: false\n  minAvailable: 1\n\nnodeSelector: {}\n\ntolerations: []\n\naffinity: {}\n\nimagePullSecrets: []\n\nhostAliases: []\n\ncustomConfigs:\n\ncustomConfigsSecrets:\n\nproperties:\n\npropertiesSecret:\n  name: \"\"\n  key: \"\"\n\ninitContainers:\n  database:\n    enabled: false\n    containerSecurityContext:\n      enabled: false\n      runAsUser: 0\n      seccompProfile:\n        type: \"RuntimeDefault\"\n  solr:\n    enabled: false\n    image: \"\"\n    containerSecurityContext:\n      enabled: false\n      runAsUser: 0\n      seccompProfile:\n        type: \"RuntimeDefault\"\n\nglowroot:\n  enabled: false\n  version: 0.14.0\n  url: https://github.com/glowroot/glowroot/releases/download/v${GLOWROOT_VERSION}/glowroot-${GLOWROOT_VERSION}-dist.zip\n  properties:\n    data.dir: /usr/local/xwiki/data/glowroot/data\n    log.dir: /usr/local/xwiki/data/glowroot/log\n    tmp.dir: /usr/local/xwiki/data/glowroot/tmp\n\nlogback:\n  enabled: false\n\nautoscaling:\n  enabled: false\n  minReplicas: 1\n  maxReplicas: 3\n  metrics: {}\n  status: {}\n\nprobes:\n  startup:\n    enabled: true\n    httpGet:\n      enabled: false\n      path: /\n    initialDelaySeconds: 120\n    timeoutSeconds: 60\n    periodSeconds: 30\n    failureThreshold: 5\n    successThreshold: 1\n  liveness:\n    enabled: true\n    httpGet:\n      enabled: true\n      path: /rest\n    initialDelaySeconds: 30\n    timeoutSeconds: 3\n    periodSeconds: 30\n    failureThreshold: 10\n    successThreshold: 1\n  readiness:\n    enabled: true\n    httpGet:\n      enabled: true\n      path: /rest/wikis/xwiki/spaces\n    initialDelaySeconds: 30\n    timeoutSeconds: 3\n    periodSeconds: 30\n    failureThreshold: 10\n    successThreshold: 1\n\ninfinispan:\n  enabled: false\n  customConfig: \"\"\n  defaultMemoryMaxCount: 10000\n\nprometheus:\n  javaagent:\n    enabled: false\n    port: 12345\n    version: 0.20.0\n    url: https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/${PROMETHEUS_JAVAAGENT_VERSION}/jmx_prometheus_javaagent-${PROMETHEUS_JAVAAGENT_VERSION}.jar\n    config: |\n      rules:\n      - pattern: \".*\"\n  podmonitor:\n    enabled: true\n    labels: {}\n\ncustomJdbc:\n  enabled: false\n"
            ],
            "verify": false,
            "version": "1.6.3",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.xwiki"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "cluster_issuer",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "cert-manager.io/v1",
                "kind": "ClusterIssuer",
                "metadata": {
                  "name": "letsencrypt-dns"
                },
                "spec": {
                  "acme": {
                    "email": "loicgourmelon@gmail.com",
                    "privateKeySecretRef": {
                      "name": "letsencrypt-dns"
                    },
                    "server": "https://acme-v02.api.letsencrypt.org/directory",
                    "solvers": [
                      {
                        "dns01": {
                          "cloudflare": {
                            "apiTokenSecretRef": {
                              "key": "api-token",
                              "name": "cloudflare-api-token-secret"
                            },
                            "email": "loicgourmelon@gmail.com"
                          }
                        },
                        "selector": {
                          "dnsZones": [
                            "logo-solutions.fr"
                          ]
                        }
                      }
                    ]
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "acme": [
                        "object",
                        {
                          "email": "string",
                          "privateKeySecretRef": [
                            "object",
                            {
                              "name": "string"
                            }
                          ],
                          "server": "string",
                          "solvers": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "dns01": [
                                    "object",
                                    {
                                      "cloudflare": [
                                        "object",
                                        {
                                          "apiTokenSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "email": "string"
                                        }
                                      ]
                                    }
                                  ],
                                  "selector": [
                                    "object",
                                    {
                                      "dnsZones": [
                                        "tuple",
                                        [
                                          "string"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ]
                            ]
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "cert-manager.io/v1",
                "kind": "ClusterIssuer",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "letsencrypt-dns",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "acme": {
                    "caBundle": null,
                    "disableAccountKeyGeneration": null,
                    "email": "loicgourmelon@gmail.com",
                    "enableDurationFeature": null,
                    "externalAccountBinding": {
                      "keyAlgorithm": null,
                      "keyID": null,
                      "keySecretRef": {
                        "key": null,
                        "name": null
                      }
                    },
                    "preferredChain": null,
                    "privateKeySecretRef": {
                      "key": null,
                      "name": "letsencrypt-dns"
                    },
                    "server": "https://acme-v02.api.letsencrypt.org/directory",
                    "skipTLSVerify": null,
                    "solvers": [
                      {
                        "dns01": {
                          "acmeDNS": {
                            "accountSecretRef": {
                              "key": null,
                              "name": null
                            },
                            "host": null
                          },
                          "akamai": {
                            "accessTokenSecretRef": {
                              "key": null,
                              "name": null
                            },
                            "clientSecretSecretRef": {
                              "key": null,
                              "name": null
                            },
                            "clientTokenSecretRef": {
                              "key": null,
                              "name": null
                            },
                            "serviceConsumerDomain": null
                          },
                          "azureDNS": {
                            "clientID": null,
                            "clientSecretSecretRef": {
                              "key": null,
                              "name": null
                            },
                            "environment": null,
                            "hostedZoneName": null,
                            "managedIdentity": {
                              "clientID": null,
                              "resourceID": null
                            },
                            "resourceGroupName": null,
                            "subscriptionID": null,
                            "tenantID": null
                          },
                          "cloudDNS": {
                            "hostedZoneName": null,
                            "project": null,
                            "serviceAccountSecretRef": {
                              "key": null,
                              "name": null
                            }
                          },
                          "cloudflare": {
                            "apiKeySecretRef": {
                              "key": null,
                              "name": null
                            },
                            "apiTokenSecretRef": {
                              "key": "api-token",
                              "name": "cloudflare-api-token-secret"
                            },
                            "email": "loicgourmelon@gmail.com"
                          },
                          "cnameStrategy": null,
                          "digitalocean": {
                            "tokenSecretRef": {
                              "key": null,
                              "name": null
                            }
                          },
                          "rfc2136": {
                            "nameserver": null,
                            "tsigAlgorithm": null,
                            "tsigKeyName": null,
                            "tsigSecretSecretRef": {
                              "key": null,
                              "name": null
                            }
                          },
                          "route53": {
                            "accessKeyID": null,
                            "accessKeyIDSecretRef": {
                              "key": null,
                              "name": null
                            },
                            "hostedZoneID": null,
                            "region": null,
                            "role": null,
                            "secretAccessKeySecretRef": {
                              "key": null,
                              "name": null
                            }
                          },
                          "webhook": {
                            "config": null,
                            "groupName": null,
                            "solverName": null
                          }
                        },
                        "http01": {
                          "gatewayHTTPRoute": {
                            "labels": null,
                            "parentRefs": null,
                            "serviceType": null
                          },
                          "ingress": {
                            "class": null,
                            "ingressClassName": null,
                            "ingressTemplate": {
                              "metadata": {
                                "annotations": null,
                                "labels": null
                              }
                            },
                            "name": null,
                            "podTemplate": {
                              "metadata": {
                                "annotations": null,
                                "labels": null
                              },
                              "spec": {
                                "affinity": {
                                  "nodeAffinity": {
                                    "preferredDuringSchedulingIgnoredDuringExecution": null,
                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                      "nodeSelectorTerms": null
                                    }
                                  },
                                  "podAffinity": {
                                    "preferredDuringSchedulingIgnoredDuringExecution": null,
                                    "requiredDuringSchedulingIgnoredDuringExecution": null
                                  },
                                  "podAntiAffinity": {
                                    "preferredDuringSchedulingIgnoredDuringExecution": null,
                                    "requiredDuringSchedulingIgnoredDuringExecution": null
                                  }
                                },
                                "imagePullSecrets": null,
                                "nodeSelector": null,
                                "priorityClassName": null,
                                "serviceAccountName": null,
                                "tolerations": null
                              }
                            },
                            "serviceType": null
                          }
                        },
                        "selector": {
                          "dnsNames": null,
                          "dnsZones": [
                            "logo-solutions.fr"
                          ],
                          "matchLabels": null
                        }
                      }
                    ]
                  },
                  "ca": {
                    "crlDistributionPoints": null,
                    "issuingCertificateURLs": null,
                    "ocspServers": null,
                    "secretName": null
                  },
                  "selfSigned": {
                    "crlDistributionPoints": null
                  },
                  "vault": {
                    "auth": {
                      "appRole": {
                        "path": null,
                        "roleId": null,
                        "secretRef": {
                          "key": null,
                          "name": null
                        }
                      },
                      "kubernetes": {
                        "mountPath": null,
                        "role": null,
                        "secretRef": {
                          "key": null,
                          "name": null
                        },
                        "serviceAccountRef": {
                          "name": null
                        }
                      },
                      "tokenSecretRef": {
                        "key": null,
                        "name": null
                      }
                    },
                    "caBundle": null,
                    "caBundleSecretRef": {
                      "key": null,
                      "name": null
                    },
                    "namespace": null,
                    "path": null,
                    "server": null
                  },
                  "venafi": {
                    "cloud": {
                      "apiTokenSecretRef": {
                        "key": null,
                        "name": null
                      },
                      "url": null
                    },
                    "tpp": {
                      "caBundle": null,
                      "credentialsRef": {
                        "name": null
                      },
                      "url": null
                    },
                    "zone": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "acme": [
                        "object",
                        {
                          "caBundle": "string",
                          "disableAccountKeyGeneration": "bool",
                          "email": "string",
                          "enableDurationFeature": "bool",
                          "externalAccountBinding": [
                            "object",
                            {
                              "keyAlgorithm": "string",
                              "keyID": "string",
                              "keySecretRef": [
                                "object",
                                {
                                  "key": "string",
                                  "name": "string"
                                }
                              ]
                            }
                          ],
                          "preferredChain": "string",
                          "privateKeySecretRef": [
                            "object",
                            {
                              "key": "string",
                              "name": "string"
                            }
                          ],
                          "server": "string",
                          "skipTLSVerify": "bool",
                          "solvers": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "dns01": [
                                    "object",
                                    {
                                      "acmeDNS": [
                                        "object",
                                        {
                                          "accountSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "host": "string"
                                        }
                                      ],
                                      "akamai": [
                                        "object",
                                        {
                                          "accessTokenSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "clientSecretSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "clientTokenSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "serviceConsumerDomain": "string"
                                        }
                                      ],
                                      "azureDNS": [
                                        "object",
                                        {
                                          "clientID": "string",
                                          "clientSecretSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "environment": "string",
                                          "hostedZoneName": "string",
                                          "managedIdentity": [
                                            "object",
                                            {
                                              "clientID": "string",
                                              "resourceID": "string"
                                            }
                                          ],
                                          "resourceGroupName": "string",
                                          "subscriptionID": "string",
                                          "tenantID": "string"
                                        }
                                      ],
                                      "cloudDNS": [
                                        "object",
                                        {
                                          "hostedZoneName": "string",
                                          "project": "string",
                                          "serviceAccountSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "cloudflare": [
                                        "object",
                                        {
                                          "apiKeySecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "apiTokenSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "email": "string"
                                        }
                                      ],
                                      "cnameStrategy": "string",
                                      "digitalocean": [
                                        "object",
                                        {
                                          "tokenSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "rfc2136": [
                                        "object",
                                        {
                                          "nameserver": "string",
                                          "tsigAlgorithm": "string",
                                          "tsigKeyName": "string",
                                          "tsigSecretSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "route53": [
                                        "object",
                                        {
                                          "accessKeyID": "string",
                                          "accessKeyIDSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "hostedZoneID": "string",
                                          "region": "string",
                                          "role": "string",
                                          "secretAccessKeySecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "webhook": [
                                        "object",
                                        {
                                          "config": "dynamic",
                                          "groupName": "string",
                                          "solverName": "string"
                                        }
                                      ]
                                    }
                                  ],
                                  "http01": [
                                    "object",
                                    {
                                      "gatewayHTTPRoute": [
                                        "object",
                                        {
                                          "labels": [
                                            "map",
                                            "string"
                                          ],
                                          "parentRefs": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "group": "string",
                                                "kind": "string",
                                                "name": "string",
                                                "namespace": "string",
                                                "port": "number",
                                                "sectionName": "string"
                                              }
                                            ]
                                          ],
                                          "serviceType": "string"
                                        }
                                      ],
                                      "ingress": [
                                        "object",
                                        {
                                          "class": "string",
                                          "ingressClassName": "string",
                                          "ingressTemplate": [
                                            "object",
                                            {
                                              "metadata": [
                                                "object",
                                                {
                                                  "annotations": [
                                                    "map",
                                                    "string"
                                                  ],
                                                  "labels": [
                                                    "map",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "name": "string",
                                          "podTemplate": [
                                            "object",
                                            {
                                              "metadata": [
                                                "object",
                                                {
                                                  "annotations": [
                                                    "map",
                                                    "string"
                                                  ],
                                                  "labels": [
                                                    "map",
                                                    "string"
                                                  ]
                                                }
                                              ],
                                              "spec": [
                                                "object",
                                                {
                                                  "affinity": [
                                                    "object",
                                                    {
                                                      "nodeAffinity": [
                                                        "object",
                                                        {
                                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "preference": [
                                                                  "object",
                                                                  {
                                                                    "matchExpressions": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ],
                                                                    "matchFields": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ]
                                                                  }
                                                                ],
                                                                "weight": "number"
                                                              }
                                                            ]
                                                          ],
                                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                                            "object",
                                                            {
                                                              "nodeSelectorTerms": [
                                                                "list",
                                                                [
                                                                  "object",
                                                                  {
                                                                    "matchExpressions": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ],
                                                                    "matchFields": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ]
                                                                  }
                                                                ]
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "podAffinity": [
                                                        "object",
                                                        {
                                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "podAffinityTerm": [
                                                                  "object",
                                                                  {
                                                                    "labelSelector": [
                                                                      "object",
                                                                      {
                                                                        "matchExpressions": [
                                                                          "list",
                                                                          [
                                                                            "object",
                                                                            {
                                                                              "key": "string",
                                                                              "operator": "string",
                                                                              "values": [
                                                                                "list",
                                                                                "string"
                                                                              ]
                                                                            }
                                                                          ]
                                                                        ],
                                                                        "matchLabels": [
                                                                          "map",
                                                                          "string"
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "matchLabelKeys": [
                                                                      "list",
                                                                      "string"
                                                                    ],
                                                                    "mismatchLabelKeys": [
                                                                      "list",
                                                                      "string"
                                                                    ],
                                                                    "namespaceSelector": [
                                                                      "object",
                                                                      {
                                                                        "matchExpressions": [
                                                                          "list",
                                                                          [
                                                                            "object",
                                                                            {
                                                                              "key": "string",
                                                                              "operator": "string",
                                                                              "values": [
                                                                                "list",
                                                                                "string"
                                                                              ]
                                                                            }
                                                                          ]
                                                                        ],
                                                                        "matchLabels": [
                                                                          "map",
                                                                          "string"
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "namespaces": [
                                                                      "list",
                                                                      "string"
                                                                    ],
                                                                    "topologyKey": "string"
                                                                  }
                                                                ],
                                                                "weight": "number"
                                                              }
                                                            ]
                                                          ],
                                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "labelSelector": [
                                                                  "object",
                                                                  {
                                                                    "matchExpressions": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ],
                                                                    "matchLabels": [
                                                                      "map",
                                                                      "string"
                                                                    ]
                                                                  }
                                                                ],
                                                                "matchLabelKeys": [
                                                                  "list",
                                                                  "string"
                                                                ],
                                                                "mismatchLabelKeys": [
                                                                  "list",
                                                                  "string"
                                                                ],
                                                                "namespaceSelector": [
                                                                  "object",
                                                                  {
                                                                    "matchExpressions": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ],
                                                                    "matchLabels": [
                                                                      "map",
                                                                      "string"
                                                                    ]
                                                                  }
                                                                ],
                                                                "namespaces": [
                                                                  "list",
                                                                  "string"
                                                                ],
                                                                "topologyKey": "string"
                                                              }
                                                            ]
                                                          ]
                                                        }
                                                      ],
                                                      "podAntiAffinity": [
                                                        "object",
                                                        {
                                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "podAffinityTerm": [
                                                                  "object",
                                                                  {
                                                                    "labelSelector": [
                                                                      "object",
                                                                      {
                                                                        "matchExpressions": [
                                                                          "list",
                                                                          [
                                                                            "object",
                                                                            {
                                                                              "key": "string",
                                                                              "operator": "string",
                                                                              "values": [
                                                                                "list",
                                                                                "string"
                                                                              ]
                                                                            }
                                                                          ]
                                                                        ],
                                                                        "matchLabels": [
                                                                          "map",
                                                                          "string"
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "matchLabelKeys": [
                                                                      "list",
                                                                      "string"
                                                                    ],
                                                                    "mismatchLabelKeys": [
                                                                      "list",
                                                                      "string"
                                                                    ],
                                                                    "namespaceSelector": [
                                                                      "object",
                                                                      {
                                                                        "matchExpressions": [
                                                                          "list",
                                                                          [
                                                                            "object",
                                                                            {
                                                                              "key": "string",
                                                                              "operator": "string",
                                                                              "values": [
                                                                                "list",
                                                                                "string"
                                                                              ]
                                                                            }
                                                                          ]
                                                                        ],
                                                                        "matchLabels": [
                                                                          "map",
                                                                          "string"
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "namespaces": [
                                                                      "list",
                                                                      "string"
                                                                    ],
                                                                    "topologyKey": "string"
                                                                  }
                                                                ],
                                                                "weight": "number"
                                                              }
                                                            ]
                                                          ],
                                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "labelSelector": [
                                                                  "object",
                                                                  {
                                                                    "matchExpressions": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ],
                                                                    "matchLabels": [
                                                                      "map",
                                                                      "string"
                                                                    ]
                                                                  }
                                                                ],
                                                                "matchLabelKeys": [
                                                                  "list",
                                                                  "string"
                                                                ],
                                                                "mismatchLabelKeys": [
                                                                  "list",
                                                                  "string"
                                                                ],
                                                                "namespaceSelector": [
                                                                  "object",
                                                                  {
                                                                    "matchExpressions": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ],
                                                                    "matchLabels": [
                                                                      "map",
                                                                      "string"
                                                                    ]
                                                                  }
                                                                ],
                                                                "namespaces": [
                                                                  "list",
                                                                  "string"
                                                                ],
                                                                "topologyKey": "string"
                                                              }
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ],
                                                  "imagePullSecrets": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "name": "string"
                                                      }
                                                    ]
                                                  ],
                                                  "nodeSelector": [
                                                    "map",
                                                    "string"
                                                  ],
                                                  "priorityClassName": "string",
                                                  "serviceAccountName": "string",
                                                  "tolerations": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "effect": "string",
                                                        "key": "string",
                                                        "operator": "string",
                                                        "tolerationSeconds": "number",
                                                        "value": "string"
                                                      }
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "serviceType": "string"
                                        }
                                      ]
                                    }
                                  ],
                                  "selector": [
                                    "object",
                                    {
                                      "dnsNames": [
                                        "list",
                                        "string"
                                      ],
                                      "dnsZones": [
                                        "list",
                                        "string"
                                      ],
                                      "matchLabels": [
                                        "map",
                                        "string"
                                      ]
                                    }
                                  ]
                                }
                              ]
                            ]
                          ]
                        }
                      ],
                      "ca": [
                        "object",
                        {
                          "crlDistributionPoints": [
                            "list",
                            "string"
                          ],
                          "issuingCertificateURLs": [
                            "list",
                            "string"
                          ],
                          "ocspServers": [
                            "list",
                            "string"
                          ],
                          "secretName": "string"
                        }
                      ],
                      "selfSigned": [
                        "object",
                        {
                          "crlDistributionPoints": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "vault": [
                        "object",
                        {
                          "auth": [
                            "object",
                            {
                              "appRole": [
                                "object",
                                {
                                  "path": "string",
                                  "roleId": "string",
                                  "secretRef": [
                                    "object",
                                    {
                                      "key": "string",
                                      "name": "string"
                                    }
                                  ]
                                }
                              ],
                              "kubernetes": [
                                "object",
                                {
                                  "mountPath": "string",
                                  "role": "string",
                                  "secretRef": [
                                    "object",
                                    {
                                      "key": "string",
                                      "name": "string"
                                    }
                                  ],
                                  "serviceAccountRef": [
                                    "object",
                                    {
                                      "name": "string"
                                    }
                                  ]
                                }
                              ],
                              "tokenSecretRef": [
                                "object",
                                {
                                  "key": "string",
                                  "name": "string"
                                }
                              ]
                            }
                          ],
                          "caBundle": "string",
                          "caBundleSecretRef": [
                            "object",
                            {
                              "key": "string",
                              "name": "string"
                            }
                          ],
                          "namespace": "string",
                          "path": "string",
                          "server": "string"
                        }
                      ],
                      "venafi": [
                        "object",
                        {
                          "cloud": [
                            "object",
                            {
                              "apiTokenSecretRef": [
                                "object",
                                {
                                  "key": "string",
                                  "name": "string"
                                }
                              ],
                              "url": "string"
                            }
                          ],
                          "tpp": [
                            "object",
                            {
                              "caBundle": "string",
                              "credentialsRef": [
                                "object",
                                {
                                  "name": "string"
                                }
                              ],
                              "url": "string"
                            }
                          ],
                          "zone": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "helm_release.cert_manager",
            "kubernetes_namespace.cert_manager",
            "kubernetes_secret.cloudflare_api_token"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "xwiki_ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "networking.k8s.io/v1",
                "kind": "Ingress",
                "metadata": {
                  "annotations": {
                    "cert-manager.io/cluster-issuer": "letsencrypt-dns",
                    "kubernetes.io/ingress.class": "nginx",
                    "nginx.ingress.kubernetes.io/proxy-body-size": "64m",
                    "nginx.ingress.kubernetes.io/ssl-redirect": "true"
                  },
                  "name": "xwiki",
                  "namespace": "xwiki"
                },
                "spec": {
                  "ingressClassName": "nginx",
                  "rules": [
                    {
                      "host": "xwiki.nudger.logo-solutions.fr",
                      "http": {
                        "paths": [
                          {
                            "backend": {
                              "service": {
                                "name": "xwiki",
                                "port": {
                                  "number": 80
                                }
                              }
                            },
                            "path": "/",
                            "pathType": "Prefix"
                          }
                        ]
                      }
                    }
                  ],
                  "tls": [
                    {
                      "hosts": [
                        "xwiki.nudger.logo-solutions.fr"
                      ],
                      "secretName": "xwiki-tls"
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "object",
                        {
                          "cert-manager.io/cluster-issuer": "string",
                          "kubernetes.io/ingress.class": "string",
                          "nginx.ingress.kubernetes.io/proxy-body-size": "string",
                          "nginx.ingress.kubernetes.io/ssl-redirect": "string"
                        }
                      ],
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "ingressClassName": "string",
                      "rules": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "host": "string",
                              "http": [
                                "object",
                                {
                                  "paths": [
                                    "tuple",
                                    [
                                      [
                                        "object",
                                        {
                                          "backend": [
                                            "object",
                                            {
                                              "service": [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "port": [
                                                    "object",
                                                    {
                                                      "number": "number"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "path": "string",
                                          "pathType": "string"
                                        }
                                      ]
                                    ]
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "hosts": [
                                "tuple",
                                [
                                  "string"
                                ]
                              ],
                              "secretName": "string"
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "networking.k8s.io/v1",
                "kind": "Ingress",
                "metadata": {
                  "annotations": {
                    "cert-manager.io/cluster-issuer": "letsencrypt-dns",
                    "kubernetes.io/ingress.class": "nginx",
                    "nginx.ingress.kubernetes.io/proxy-body-size": "64m",
                    "nginx.ingress.kubernetes.io/ssl-redirect": "true"
                  },
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "xwiki",
                  "namespace": "xwiki",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "defaultBackend": {
                    "resource": {
                      "apiGroup": null,
                      "kind": null,
                      "name": null
                    },
                    "service": {
                      "name": null,
                      "port": {
                        "name": null,
                        "number": null
                      }
                    }
                  },
                  "ingressClassName": "nginx",
                  "rules": [
                    {
                      "host": "xwiki.nudger.logo-solutions.fr",
                      "http": {
                        "paths": [
                          {
                            "backend": {
                              "resource": {
                                "apiGroup": null,
                                "kind": null,
                                "name": null
                              },
                              "service": {
                                "name": "xwiki",
                                "port": {
                                  "name": null,
                                  "number": 80
                                }
                              }
                            },
                            "path": "/",
                            "pathType": "Prefix"
                          }
                        ]
                      }
                    }
                  ],
                  "tls": [
                    {
                      "hosts": [
                        "xwiki.nudger.logo-solutions.fr"
                      ],
                      "secretName": "xwiki-tls"
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "defaultBackend": [
                        "object",
                        {
                          "resource": [
                            "object",
                            {
                              "apiGroup": "string",
                              "kind": "string",
                              "name": "string"
                            }
                          ],
                          "service": [
                            "object",
                            {
                              "name": "string",
                              "port": [
                                "object",
                                {
                                  "name": "string",
                                  "number": "number"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "ingressClassName": "string",
                      "rules": [
                        "list",
                        [
                          "object",
                          {
                            "host": "string",
                            "http": [
                              "object",
                              {
                                "paths": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "backend": [
                                        "object",
                                        {
                                          "resource": [
                                            "object",
                                            {
                                              "apiGroup": "string",
                                              "kind": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "service": [
                                            "object",
                                            {
                                              "name": "string",
                                              "port": [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "number": "number"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "path": "string",
                                      "pathType": "string"
                                    }
                                  ]
                                ]
                              }
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "list",
                        [
                          "object",
                          {
                            "hosts": [
                              "list",
                              "string"
                            ],
                            "secretName": "string"
                          }
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "helm_release.cert_manager",
            "helm_release.xwiki",
            "kubernetes_manifest.cluster_issuer",
            "kubernetes_namespace.cert_manager",
            "kubernetes_namespace.xwiki",
            "kubernetes_secret.cloudflare_api_token"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "cert_manager",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "cert-manager",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "cert-manager",
                "resource_version": "934068",
                "uid": "6fb557b1-55b5-41b5-a8af-3f6a43ce7569"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "ingress_nginx",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ingress-nginx",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "ingress-nginx",
                "resource_version": "1306237",
                "uid": "05488b27-34bc-4808-9fd9-dd24f5a8a649"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "xwiki",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "xwiki",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "xwiki",
                "resource_version": "803757",
                "uid": "660e8b76-299c-4817-8df8-a2dab4500545"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_secret",
      "name": "cloudflare_api_token",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "api-token": "T182TU0wQlhVXzBJUmpXMW1FUzlYTDQ1aHlPckQzaHRYQ0MxcV9yRQ=="
            },
            "id": "cert-manager/cloudflare-api-token-secret",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "cloudflare-api-token-secret",
                "namespace": "cert-manager",
                "resource_version": "934244",
                "uid": "7221f5a8-336d-4d37-8600-589f894434ae"
              }
            ],
            "timeouts": null,
            "type": "Opaque",
            "wait_for_service_account_token": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "binary_data"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "data"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMH19"
        }
      ]
    }
  ],
  "check_results": null
}
