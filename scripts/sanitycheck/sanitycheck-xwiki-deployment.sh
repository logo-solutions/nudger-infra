#!/usr/bin/env bash
set -euo pipefail

echo "üß† Sanity Check - XWiki Kubernetes Terraform Deployment"
echo "------------------------------------------------------"

# Initialise un compteur d‚Äôerreurs

## 1. Terraform
echo "üîç [1/10] V√©rification de Terraform..."
if command -v terraform >/dev/null 2>&1; then
  terraform version | head -n 1
else
  echo "‚ùå Terraform non install√©"
fi

## 2. Kubectl
echo "üîç [2/10] V√©rification de kubectl et du contexte actif..."
if command -v kubectl >/dev/null 2>&1; then
  kubectl version  --client
  if ! kubectl cluster-info >/dev/null 2>&1; then
    echo "‚ùå Cluster Kubernetes inaccessible"
  fi
else
  echo "‚ùå kubectl non install√©"
fi

## 3. Helm
echo "üîç [3/10] V√©rification de Helm..."
if command -v helm >/dev/null 2>&1; then
  helm version --short
else
  echo "‚ùå Helm non install√©"
fi

## 4. Variables d‚Äôenv attendues
echo "üîç [4/10] V√©rification des secrets d‚ÄôAPI (Cloudflare, etc.)..."
for var in CLOUDFLARE_API_TOKEN CLOUDFLARE_EMAIL HCLOUD_TOKEN; do
  if [[ -z "${!var:-}" ]]; then
    echo "‚ùå Variable $var non d√©finie"
  else
    echo "‚úÖ $var d√©fini"
  fi
done

## 5. Modules Terraform
echo "üîç [5/10] V√©rification des modules Terraform d√©clar√©s..."
grep -E 'source\s+=' *.tf | grep -v '^#' || echo "‚ÑπÔ∏è Aucun module Terraform d√©tect√©"

## 6. Terraform init
echo "üîç [6/10] V√©rification de l‚Äô√©tat de Terraform (init)..."
if [[ -f "./.terraform.lock.hcl" && -d ".terraform" ]]; then
  echo "‚úÖ Terraform init d√©tect√©"
else
  echo "‚ö†Ô∏è  Lancement requis : terraform init"
fi

## 7. Permissions Kubernetes
echo "üîç [7/10] V√©rification des permissions K8s..."
for action in "create namespace" "create clusterrolebinding" "create issuer.cert-manager.io" "create ingress"; do
  if kubectl auth can-i $action >/dev/null 2>&1; then
    echo "‚úÖ Can $action"
  else
    echo "‚ùå Cannot $action"
  fi
done

## 8. CRDs attendues
echo "üîç [8/10] V√©rification des CRDs cert-manager / external-dns..."
for crd in certificates.cert-manager.io clusterissuers.cert-manager.io dnsrecords.externaldns.k8s.io; do
  if kubectl get crd "$crd" >/dev/null 2>&1; then
    echo "‚úÖ CRD $crd pr√©sente"
  else
    echo "‚ö†Ô∏è CRD $crd absente"
  fi
done

## 9. Providers Terraform
echo "üîç [9/10] V√©rification des providers d√©clar√©s..."
grep 'provider "' *.tf || echo "‚ö†Ô∏è Aucun provider d√©tect√©"

## 10. N≈ìuds K8s
echo "üîç [10/10] V√©rification des n≈ìuds Kubernetes..."
kubectl get nodes -o wide || { echo "‚ùå Aucun n≈ìud d√©tect√©"}

echo "------------------------------------------------------"
