#!/bin/bash
# =====================================================================
# üîÑ reset-vault.sh ‚Äî R√©initialise compl√®tement Vault et son stockage
# ---------------------------------------------------------------------
# Supprime :
#   - le namespace vault
#   - les PVC / PV associ√©s
#   - les volumes Longhorn
#   - nettoie les finalizers bloquants
# Puis attend que tout soit supprim√© avant de relancer le d√©ploiement.
# =====================================================================

set -euo pipefail

NAMESPACE="vault"
LONGHORN_NS="longhorn-system"

echo "üö® R√©initialisation compl√®te de Vault et du stockage associ√©"
echo "üîç Namespace cibl√© : ${NAMESPACE}"

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# 1Ô∏è‚É£ Suppression du namespace Vault
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
echo "üßπ Suppression du namespace Vault..."
kubectl delete namespace "${NAMESPACE}" --ignore-not-found=true --wait=false

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# 2Ô∏è‚É£ Suppression des PV/PVC li√©s √† Vault
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
echo "üì¶ Suppression des PV/PVC li√©s √† Vault..."
kubectl get pvc -A | grep "${NAMESPACE}" || echo "Aucun PVC Vault trouv√©."
kubectl get pv | grep "${NAMESPACE}" || echo "Aucun PV Vault trouv√©."

# Patch finalizers (si PVC bloqu√©s)
echo "ü©π Suppression des finalizers sur les PVC (si n√©cessaire)..."
for pvc in $(kubectl get pvc -n "${NAMESPACE}" -o name 2>/dev/null || true); do
  kubectl patch "$pvc" -n "${NAMESPACE}" -p '{"metadata":{"finalizers":null}}' --type=merge || true
done

# Supprimer tous les PVC et PV r√©siduels
kubectl delete pvc -n "${NAMESPACE}" --all --ignore-not-found=true || true
kubectl delete pv --all --ignore-not-found=true || true

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# 3Ô∏è‚É£ Suppression des volumes Longhorn li√©s √† Vault
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
echo "üß± Nettoyage des volumes Longhorn (Vault)..."
for vol in $(kubectl -n ${LONGHORN_NS} get volumes -o name 2>/dev/null | grep vault || true); do
  kubectl -n ${LONGHORN_NS} delete "$vol" || true
done

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# 4Ô∏è‚É£ Attente de la disparition compl√®te
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
echo "‚è≥ Attente de la suppression compl√®te..."
sleep 5
kubectl get pv,pvc -A | grep "${NAMESPACE}" || echo "‚úÖ Plus aucun PV/PVC Vault"
kubectl get ns "${NAMESPACE}" >/dev/null 2>&1 && echo "‚ö†Ô∏è Namespace encore pr√©sent..." || echo "‚úÖ Namespace supprim√©"
kubectl -n ${LONGHORN_NS} get volumes | grep vault || echo "‚úÖ Plus aucun volume Longhorn Vault"

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# 5Ô∏è‚É£ (Optionnel) R√©initialisation du dossier local sur le master
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
MASTER_IP="91.98.16.184"
MASTER_KEY="/root/.ssh/hetzner-bastion"
echo "üßΩ Nettoyage du r√©pertoire de stockage local sur le master..."
ssh -i "$MASTER_KEY" -o StrictHostKeyChecking=no root@"$MASTER_IP" "rm -rf /var/lib/vault/data/* || true"

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# 6Ô∏è‚É£ Relance propre du d√©ploiement Terraform
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
echo "üöÄ Relancer ensuite manuellement :"
echo "   cd ~/nudger-infra/terraform/vault-storage && terraform apply -auto-approve"
echo "   cd ~/nudger-infra/terraform/vault && terraform apply -auto-approve"
echo ""
echo "üèÅ R√©initialisation termin√©e."
echo "# 1Ô∏è‚É£ Recr√©e le stockage local pour Vault
cd ~/nudger-infra/terraform/vault-storage
terraform apply -auto-approve

# 2Ô∏è‚É£ Red√©ploie Vault lui-m√™me
cd ~/nudger-infra/terraform/vault
terraform apply -auto-approve"
echo "attendre que le pod passe en runinng"
echo "# 3Ô∏è‚É£ Initialisation propre
kubectl exec -n vault -it vault-0 -- sh
vault operator init -key-shares=1 -key-threshold=1 -format=json > /tmp/vault-init.json
exit
kubectl cp vault/vault-0:/tmp/vault-init.json /root/.ansible/artifacts/master1/vault-k8s-init.json

# 4Ô∏è‚É£ D√©verrouillage
export VAULT_ADDR=http://127.0.0.1:8200
kubectl port-forward -n vault svc/vault 8200:8200 &
vault operator unseal $(jq -r '.unseal_keys_b64[0]' /root/.ansible/artifacts/master1/vault-k8s-init.json)
vault status"
echo "export VAULT_ADDR=http://127.0.0.1:8200"
echo "export VAULT_TOKEN=$(jq -r '.root_token' /root/.ansible/artifacts/master1/vault-k8s-init.json)	"
echo "vault login $VAULT_TOKEN"

